##### Common variable
TODAY=$(date "+%y%m%d")
SCRIPT="$HOME/tool/ansible.d/script"
SCRIPT_LOG="${SCRIPT}/log"
HOSTNAME=$(hostname)

##### Common function
function Logging() {
    _CMD_LOG="tee -a ${SCRIPT_LOG}/script_${TODAY}.log"
    _RUN_TODAY=$(date "+%y%m%d")
    _RUN_TIME=$(date "+%H:%M:%S.%3N")
  
    _LOG_TIME="${BWhite}[ ${_RUN_TODAY} ${_RUN_TIME} ]${Color_Off}"
    _LOG_TYPE=$1
    _LOG_MSG=$2

    case ${_LOG_TYPE} in
        "CMD")   printf "${_LOG_TIME} ${BWhite}[${_LOG_TYPE}] ${_LOG_MSG}${Color_Off}: "         |eval "${_CMD_LOG}" ;;
        "OK")    printf "${BGreen}${_LOG_TYPE}${Color_Off}\n"                                    |eval "${_CMD_LOG}" ;;        
        "FAIL")  printf "${BRed}${_LOG_TYPE}${Color_Off}\n"                                      |eval "${_CMD_LOG}" ;;
        "SKIP")  printf "${BPurple}${_LOG_TYPE} ${BWhite}-> ${_LOG_MSG}${Color_Off}\n"           |eval "${_CMD_LOG}" ;;
        "WARR")  printf "${_LOG_TIME} ${BCyan}[${_LOG_TYPE}] ${_LOG_MSG}${Color_Off}\n"          |eval "${_CMD_LOG}" ;;
        "INFO")   printf "${_LOG_TIME} ${BWhite}[${_LOG_TYPE}] ${_LOG_MSG}${Color_Off}\n"        |eval "${_CMD_LOG}" ;;
        "CRT")   printf "${_LOG_TIME} ${BWhite}[${_LOG_TYPE}] ${BRed}${_LOG_MSG}${Color_Off}\n"  |eval "${_CMD_LOG}" ;;
        "MENU")   printf "${_LOG_TIME} ${On_White}[${_LOG_TYPE}] ${BBlack}${_LOG_MSG}${Color_Off}\n"  |eval "${_CMD_LOG}" ;;
    esac
}

function checkCMD() {
    req_cmd=("wget" "unzip" "jq" "pgrep")
    _cnt=0

    for _cmd in ${req_cmd[@]}; do
        if ! command -v ${_cmd} >/dev/null 2>&1; then
            Logging "WARR" "Command [ ${_cmd} ] not found. \n"
            _cnt=`expr $_cnt + 1`
        fi
    done

    if [ ${_cnt} -eq 0 ]; then
        return 0
    else
        Logging "CRT" "Plase check Command\n"
        exit 0
    fi
}

function RunCmd() {
    _CMD=$@
    printf "CMD: [ ${_CMD} ]\n" >>${SCRIPT_LOG}/script_cmd_${TODAY}.log 2>&1
    Logging "CMD" "$@"
    
    eval "${_CMD}" >>${SCRIPT_LOG}/script_cmd_${TODAY}.log 2>&1
    if [ $? -eq 0 ]; then
        Logging "OK"
        return 0
    else
        Logging "FAIL"
        return 1
    fi
}